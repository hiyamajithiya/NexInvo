# Generated by Django 5.0.2 on 2025-09-20 15:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_type', models.CharField(choices=[('proforma', 'Proforma'), ('taxable', 'Taxable')], max_length=20)),
                ('series', models.CharField(blank=True, max_length=20)),
                ('number', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('due_date', models.DateField()),
                ('place_of_supply', models.CharField(max_length=2)),
                ('reverse_charge', models.BooleanField(default=False)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('exchange_rate', models.DecimalField(decimal_places=4, default=1.0, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('taxable_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('round_off', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_status', models.CharField(choices=[('unpaid', 'Unpaid'), ('partial', 'Partially Paid'), ('paid', 'Paid'), ('overdue', 'Overdue')], default='unpaid', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('terms_conditions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='tenants.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices_created', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='tenants.tenant')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'invoices',
            },
        ),
        migrations.CreateModel(
            name='EmailCommunication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('to_email', models.EmailField(max_length=254)),
                ('cc_email', models.TextField(blank=True)),
                ('bcc_email', models.TextField(blank=True)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('attachment_paths', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('bounced', 'Bounced'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('provider_message_id', models.CharField(blank=True, max_length=100)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('bounce_reason', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emails_sent', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_communications', to='tenants.tenant')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_communications', to='invoices.invoice')),
            ],
            options={
                'verbose_name': 'Email Communication',
                'verbose_name_plural': 'Email Communications',
                'db_table': 'email_communications',
            },
        ),
        migrations.CreateModel(
            name='EInvoiceDetails',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('irp_status', models.CharField(choices=[('pending', 'Pending'), ('submitted', 'Submitted'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('irn', models.CharField(blank=True, max_length=64)),
                ('ack_no', models.CharField(blank=True, max_length=50)),
                ('ack_date', models.DateTimeField(blank=True, null=True)),
                ('qr_code_image', models.TextField(blank=True)),
                ('signed_invoice_hash', models.TextField(blank=True)),
                ('irp_request_payload', models.JSONField(blank=True, default=dict)),
                ('irp_response_payload', models.JSONField(blank=True, default=dict)),
                ('cancellation_date', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='einvoice_details', to='invoices.invoice')),
            ],
            options={
                'verbose_name': 'E-Invoice Details',
                'verbose_name_plural': 'E-Invoice Details',
                'db_table': 'einvoice_details',
            },
        ),
        migrations.CreateModel(
            name='InvoiceTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('invoice', 'Invoice'), ('email', 'Email')], max_length=20)),
                ('html_template', models.TextField()),
                ('css_styles', models.TextField(blank=True)),
                ('json_layout', models.JSONField(default=dict)),
                ('is_default', models.BooleanField(default=False)),
                ('is_system_template', models.BooleanField(default=False)),
                ('mandatory_fields', models.JSONField(default=list)),
                ('preview_image', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates_created', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_templates', to='tenants.tenant')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invoice Template',
                'verbose_name_plural': 'Invoice Templates',
                'db_table': 'invoice_templates',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('item_code', models.CharField(max_length=50)),
                ('sku', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('hsn_sac', models.CharField(blank=True, max_length=10)),
                ('uqc', models.CharField(blank=True, max_length=10)),
                ('default_rate', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('current_gst_rate', models.DecimalField(decimal_places=2, default=18.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('current_cess_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('item_category', models.CharField(blank=True, max_length=100)),
                ('is_service', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items_created', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='tenants.tenant')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Items',
                'db_table': 'items',
            },
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('line_number', models.IntegerField()),
                ('description', models.TextField()),
                ('hsn_sac', models.CharField(blank=True, max_length=10)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('uqc', models.CharField(blank=True, max_length=10)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('taxable_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('cgst_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('sgst_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('igst_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('cess_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('cgst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sgst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('igst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cess_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='invoices.invoice')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='invoice_lines', to='invoices.item')),
            ],
            options={
                'verbose_name': 'Invoice Line',
                'verbose_name_plural': 'Invoice Lines',
                'db_table': 'invoice_lines',
                'ordering': ['invoice', 'line_number'],
            },
        ),
        migrations.CreateModel(
            name='GSTRateHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hsn_sac', models.CharField(max_length=10)),
                ('effective_from', models.DateField()),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('cgst_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('sgst_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('igst_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cess_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('notification_reference', models.CharField(blank=True, max_length=100)),
                ('change_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rate_history', to='invoices.item')),
            ],
            options={
                'verbose_name': 'GST Rate History',
                'verbose_name_plural': 'GST Rate Histories',
                'db_table': 'gst_rate_history',
            },
        ),
        migrations.CreateModel(
            name='PaymentReminder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reminder_type', models.CharField(choices=[('gentle', 'Gentle'), ('firm', 'Firm'), ('final', 'Final'), ('custom', 'Custom')], max_length=20)),
                ('schedule_rule', models.JSONField(default=dict)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('stopped', 'Stopped'), ('completed', 'Completed')], default='active', max_length=20)),
                ('last_sent_at', models.DateTimeField(blank=True, null=True)),
                ('next_send_at', models.DateTimeField(blank=True, null=True)),
                ('auto_stop_enabled', models.BooleanField(default=True)),
                ('max_attempts', models.IntegerField(default=5)),
                ('custom_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reminders_created', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_reminders', to='invoices.invoice')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='invoices.invoicetemplate')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_reminders', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Payment Reminder',
                'verbose_name_plural': 'Payment Reminders',
                'db_table': 'payment_reminders',
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['tenant', 'date'], name='invoices_tenant__683c86_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['tenant', 'client', 'date'], name='invoices_tenant__1acc1b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together={('tenant', 'series', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together={('tenant', 'item_code')},
        ),
        migrations.AlterUniqueTogether(
            name='invoiceline',
            unique_together={('invoice', 'line_number')},
        ),
        migrations.AddIndex(
            model_name='gstratehistory',
            index=models.Index(fields=['item', 'effective_from'], name='gst_rate_hi_item_id_5426c3_idx'),
        ),
    ]
