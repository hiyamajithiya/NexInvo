# Generated by Django 5.0.2 on 2025-09-20 15:05

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider_type', models.CharField(choices=[('smtp', 'SMTP'), ('sendgrid', 'SendGrid'), ('mailgun', 'Mailgun'), ('ses', 'Amazon SES')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('configuration', models.JSONField(default=dict)),
                ('credentials_encrypted', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('daily_limit', models.IntegerField(default=1000)),
                ('monthly_limit', models.IntegerField(default=30000)),
                ('emails_sent_today', models.IntegerField(default=0)),
                ('emails_sent_this_month', models.IntegerField(default=0)),
                ('last_reset_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_providers_created', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_providers', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Email Provider',
                'verbose_name_plural': 'Email Providers',
                'db_table': 'email_providers',
            },
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('integration_type', models.CharField(choices=[('tally', 'Tally Prime'), ('zoho', 'Zoho Books'), ('d365', 'Dynamics 365'), ('smtp', 'SMTP Email'), ('webhook', 'Webhook')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('credentials_encrypted', models.JSONField(blank=True, default=dict)),
                ('configuration', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('sync_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error'), ('syncing', 'Syncing')], default='inactive', max_length=20)),
                ('error_log', models.JSONField(blank=True, default=list)),
                ('webhook_secret', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='integrations_created', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='tenants.tenant')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='integrations_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Integration',
                'verbose_name_plural': 'Integrations',
                'db_table': 'integrations',
                'unique_together': {('tenant', 'integration_type', 'name')},
            },
        ),
        migrations.CreateModel(
            name='TallyExport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('export_type', models.CharField(choices=[('vouchers', 'Vouchers'), ('ledgers', 'Ledgers'), ('items', 'Items')], max_length=20)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('xml_content', models.TextField(blank=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('export_metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tally_exports_created', to=settings.AUTH_USER_MODEL)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tally_exports', to='integrations.integration')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tally_exports', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Tally Export',
                'verbose_name_plural': 'Tally Exports',
                'db_table': 'tally_exports',
            },
        ),
        migrations.CreateModel(
            name='GSTRExport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('export_type', models.CharField(choices=[('gstr1', 'GSTR-1'), ('gstr3b', 'GSTR-3B')], max_length=10)),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('export_data', models.JSONField(default=dict)),
                ('csv_content', models.TextField(blank=True)),
                ('json_content', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('total_invoices', models.IntegerField(default=0)),
                ('total_taxable_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('reconciliation_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gstr_exports_created', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gstr_exports', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'GSTR Export',
                'verbose_name_plural': 'GSTR Exports',
                'db_table': 'gstr_exports',
                'unique_together': {('tenant', 'export_type', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('invoice.created', 'Invoice Created'), ('invoice.updated', 'Invoice Updated'), ('invoice.paid', 'Invoice Paid'), ('client.created', 'Client Created'), ('client.updated', 'Client Updated'), ('payment.received', 'Payment Received')], max_length=50)),
                ('entity_id', models.CharField(max_length=50)),
                ('payload', models.JSONField(default=dict)),
                ('delivery_status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='pending', max_length=20)),
                ('delivery_attempts', models.IntegerField(default=0)),
                ('last_delivery_attempt', models.DateTimeField(blank=True, null=True)),
                ('next_delivery_attempt', models.DateTimeField(blank=True, null=True)),
                ('response_status_code', models.IntegerField(blank=True, null=True)),
                ('response_body', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_events', to='integrations.integration')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_events', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Webhook Event',
                'verbose_name_plural': 'Webhook Events',
                'db_table': 'webhook_events',
                'indexes': [models.Index(fields=['tenant', 'event_type'], name='webhook_eve_tenant__24bfb3_idx'), models.Index(fields=['delivery_status', 'next_delivery_attempt'], name='webhook_eve_deliver_4400e8_idx')],
            },
        ),
        migrations.CreateModel(
            name='ZohoSyncLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entity_type', models.CharField(max_length=50)),
                ('entity_id', models.CharField(max_length=50)),
                ('zoho_id', models.CharField(blank=True, max_length=50)),
                ('action', models.CharField(choices=[('push', 'Push to Zoho'), ('pull', 'Pull from Zoho'), ('update', 'Update in Zoho')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('partial', 'Partial')], max_length=10)),
                ('request_payload', models.JSONField(blank=True, default=dict)),
                ('response_payload', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zoho_sync_logs', to='integrations.integration')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zoho_sync_logs', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Zoho Sync Log',
                'verbose_name_plural': 'Zoho Sync Logs',
                'db_table': 'zoho_sync_logs',
                'indexes': [models.Index(fields=['tenant', 'entity_type', 'entity_id'], name='zoho_sync_l_tenant__73f12a_idx')],
            },
        ),
    ]
